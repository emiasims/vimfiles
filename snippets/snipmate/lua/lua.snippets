snippet p print
	print($0)

snippet p pretty print
	P($0)

snippet lpca Protect call a function as a variable
	local ${1:success}, ${2:err_or_value} = pcall(${3:function})

snippet elif elseif
	elseif ${1:true} then
		$0

snippet fori for loop range
	for ${1:i}=${2:1},${3:10} do
		$0
	end

snippet fu function
	function ${1:name}($2)
		$0
	end

snippet ilf Inline function
	function($1) return $0 end

snippet l create a variable
	local ${0}

snippet rt return value
	return $0

snippet wh while
	while ${1:true} do
		$0
	end

snippet f= inline-function
	local ${1:name} = function($2)
		${0:-- code}
	end

snippet pca Protect call a function
	pcall(${1:function})

snippet ll create a variable
	local ${1:varName} = ${0:value}

snippet req Require module
	require '${1:module}'$0

snippet if if
	if $1 then
		$0
	end

snippet foreach foreach
	for i, ${1:x} in pairs(${2:table}) do
		$0
	end

snippet lreq Require module as a variable
	local ${1:var} = require '${2:module}'$0

snippet class Create a class
	---@class $1
	---@private
	local ${1:ClassName} = {}
	$1.__index = $1

	function $1.new($2)
		local self = {$0}
		return setmetatable(self, $1)
	end
