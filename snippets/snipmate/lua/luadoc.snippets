snippet @see Refers to other descriptions of functions or tables.
	@see ${1:name of a function or table}$0

snippet @copyright The copyright notice of the module or file. LuaDoc adds a Â© sign between the label (Copyright) and the given text (e.g. 2004-2007 Kepler Project).
	@copyright ${1:text.}$0

snippet @class If LuaDoc cannot infer the type of documentation (function, table or module definition), the programmer can specify it explicitly.
	@class ${1:name}$0

snippet @description The description of the function or table. This is usually infered automatically.
	@description ${1:text}$0

snippet @param Describe function parameters. It requires the name of the parameter and its description.
	@param ${1:name} ${2:type} ${3:Parameter description.}$0

snippet --- A lua comment with short summary, description, parameters, return, and example.
	--- ${1:A one-line summary.}
	-- ${2:Description.}$0
	-- @param ${5:name} ${6:type} ${7:Parameter description.}
	-- @return ${3:type} ${4: Description of the returned object.}
	-- @usage ${8:Example about how to use it.}

snippet @name The name of the function or table definition. This is usually infered from the code analysis, and the programmer does not need to define it. If LuaDoc can infer the name of the function automatically it's even not recomended to define the name explicitly, to avoid redundancy.
	@name ${1:text}$0

snippet @release Free format string to describe the module or file release.
	@release ${1:text}$0

snippet -- A simple lua comment with short summary and description. Useful when you prefer to add the tags manually on functions.
	--- ${1:A one-line summary.}
	-- ${2:Description.}$0

snippet @return Describe a returning value of the function. Since Lua can return multiple values, this tag should appear more than once.
	@return ${1:type} ${2:Description of the returned object.}$0

snippet @field Describe a table field definition.
	@field ${1:description.}$0

snippet @author An author of the module or file.
	@author ${1:text.}$0